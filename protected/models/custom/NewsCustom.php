<?php
/**
 * Class NewsCustom
 */

class NewsCustom extends News
{
    const FLAG_PUBLISHED_INACTIVE = 0;
    const FLAG_PUBLISHED_ACTIVE = 1;

    public function rules()
    {
        return parent::rules(); // TODO: Change the autogenerated stub
    }

    public function attributeLabels()
    {
        return array(
            'title' => 'Judul',
            'flag_published' => 'Status Publikasi',
            'cat_id' => 'Kategori'
        );
    }

    /**
     * @param string $className
     * @return NewsCustom
     */
    public static function model($className = __CLASS__)
    {
        return parent::model($className); // TODO: Change the autogenerated stub
    }

    public function scopes()
    {
        return array(
            'detail'=>array(
                'select'=>"id, title, content, permalink, banner, flag_published, to_char(created_at,'DD Month YYYY, HH24:MI:SS') AS created_at, created_by, tag" ,
            ),
            'latest'=>array(
                'order'=>'timestamp_created DESC'
            ),
        );
    }

    /**
     * Find page by permalink
     */
    public function findByPermalink($permalink)
    {
        return self::model()->detail()->findByAttributes(array(
            'permalink'=>$permalink,
            'flag_published'=>self::FLAG_PUBLISHED_ACTIVE
        ));
    }

    public function search()
	{
		// @todo Please modify the following code to remove attributes that should not be searched.

		$criteria=new CDbCriteria;

		$criteria->compare('id',$this->id);
		$criteria->compare('cat_id',$this->cat_id);
		$criteria->compare('title',$this->title,true);
		$criteria->compare('permalink',$this->permalink,true);
		$criteria->compare('summary',$this->summary,true);
		$criteria->compare('content',$this->content,true);
		$criteria->compare('banner',$this->banner,true);
		$criteria->compare('video_url',$this->video_url,true);
		$criteria->compare('flag_published',$this->flag_published);
		$criteria->compare('created_at',$this->created_at,true);
		$criteria->compare('created_by',$this->created_by,true);
		$criteria->compare('updated_at',$this->updated_at,true);
		$criteria->compare('updated_by',$this->updated_by,true);
		$criteria->compare('tag',$this->tag,true);

		return new CActiveDataProvider($this, array(
            'criteria'=>$criteria,
            'sort'=> array(
                'defaultOrder' => 'created_at DESC'
            )
		));
	}
}